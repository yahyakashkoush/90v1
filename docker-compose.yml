version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: retro-fashion-db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: retro-fashion
    volumes:
      - mongodb_data:/data/db
    networks:
      - retro-fashion-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: retro-fashion-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/retro-fashion?authSource=admin
      JWT_SECRET: your_super_secret_jwt_key_here
      CLOUDINARY_CLOUD_NAME: your_cloud_name
      CLOUDINARY_API_KEY: your_api_key
      CLOUDINARY_API_SECRET: your_api_secret
      REPLICATE_API_TOKEN: your_replicate_token
      OPENAI_API_KEY: your_openai_key
    depends_on:
      - mongodb
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - retro-fashion-network

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: retro-fashion-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:5000
    depends_on:
      - backend
    networks:
      - retro-fashion-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: retro-fashion-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - retro-fashion-network

volumes:
  mongodb_data:

networks:
  retro-fashion-network:
    driver: bridge